  
  [1X3 [33X[0;0YTools[133X[101X
  
  
  [1X3.1 [33X[0;0YImporting and exporting ZX-diagrams[133X[101X
  
  [1X3.1-1 ExportAsQGraphString[101X
  
  [33X[1;0Y[29X[2XExportAsQGraphString[102X( [3Xmorphism[103X ) [32X function[133X
  [6XReturns:[106X  [33X[0;10Ya JSON string[133X
  
  [33X[0;0YTakes  a morphism in a category of ZX-diagrams and exports the morphism as a
  JSON  string.  This  function  is  only  available  if  the  package [10Xjson[110X is
  available.                                                               See
  https://github.com/Quantomatic/quantomatic/blob/stable/docs/json_formats.txt
  for an overview of the qgraph format.[133X
  
  [1X3.1-2 ExportAsQGraphFile[101X
  
  [33X[1;0Y[29X[2XExportAsQGraphFile[102X( [3Xmorphism[103X, [3Xfilename[103X ) [32X function[133X
  
  [33X[0;0YTakes  a  morphism  in  a  category  of  ZX-diagrams and a filename [13Xfile[113X and
  exports the morphism to [13Xfile[113X. This function is only available if the package
  [10Xjson[110X                   is                   available.                   See
  https://github.com/Quantomatic/quantomatic/blob/stable/docs/json_formats.txt
  for an overview of the qgraph format.[133X
  
  [1X3.1-3 ImportFromQGraphString[101X
  
  [33X[1;0Y[29X[2XImportFromQGraphString[102X( [3Xcategory[103X, [3Xstring[103X ) [32X function[133X
  [6XReturns:[106X  [33X[0;10Ya morphism[133X
  
  [33X[0;0YTakes  a  category  of ZX-diagrams and a JSON string describing a ZX-diagram
  and imports the ZX-diagram as a morphism. This function is only available if
  the          package          [10Xjson[110X         is         available.         See
  https://github.com/Quantomatic/quantomatic/blob/stable/docs/json_formats.txt
  for an overview of the qgraph format.[133X
  
  [1X3.1-4 ImportFromQGraphFile[101X
  
  [33X[1;0Y[29X[2XImportFromQGraphFile[102X( [3Xcategory[103X, [3Xfilename[103X ) [32X function[133X
  [6XReturns:[106X  [33X[0;10Ya morphism[133X
  
  [33X[0;0YTakes  a  category  of  ZX-diagrams  and  a  filename  [13Xfile[113X  and imports the
  ZX-diagram  in  [13Xfile[113X  as  a morphism. This function is only available if the
  package             [10Xjson[110X             is            available.            See
  https://github.com/Quantomatic/quantomatic/blob/stable/docs/json_formats.txt
  for an overview of the qgraph format.[133X
  
  
  [1X3.2 [33X[0;0YExample[133X[101X
  
  [33X[0;0YTest  ExportAsQGraphFile  and ImportFromQGraphFile. Due to reordering during
  import/export,  we  have  to  make  some  roundtrips  until import/export is
  stable.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XLoadPackage( "ZXCalculusForCAP", false );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XZX;[127X[104X
    [4X[28XCategoryOfZXDiagrams( )[128X[104X
    [4X[25Xgap>[125X [27XX_1_2 := X_Spider( 1, 2 );[127X[104X
    [4X[28X<A morphism in CategoryOfZXDiagrams( )>[128X[104X
    [4X[25Xgap>[125X [27XIsWellDefinedForMorphisms( X_1_2 );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XZ_2_1 := Z_Spider( 2, 1 );[127X[104X
    [4X[28X<A morphism in CategoryOfZXDiagrams( )>[128X[104X
    [4X[25Xgap>[125X [27XIsWellDefinedForMorphisms( Z_2_1 );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XX_1_2_Z_2_1 := PreCompose( X_1_2, Z_2_1 );[127X[104X
    [4X[28X<A morphism in CategoryOfZXDiagrams( )>[128X[104X
    [4X[25Xgap>[125X [27XIsWellDefinedForMorphisms( X_1_2_Z_2_1 );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27Xtmp_dir := DirectoryTemporary( );;[127X[104X
    [4X[25Xgap>[125X [27XExportAsQGraphFile( X_1_2_Z_2_1, Filename( tmp_dir, "X_1_2_Z_2_1" ) );[127X[104X
    [4X[25Xgap>[125X [27Xreimported := ImportFromQGraphFile( ZX, Filename( tmp_dir, "X_1_2_Z_2_1" ) );[127X[104X
    [4X[28X<A morphism in CategoryOfZXDiagrams( )>[128X[104X
    [4X[25Xgap>[125X [27XIsWellDefinedForMorphisms( reimported );[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27Xjson := ExportAsQGraphString( X_1_2_Z_2_1 );;[127X[104X
    [4X[25Xgap>[125X [27Xmor1 := ImportFromQGraphString( ZX, json );;[127X[104X
    [4X[25Xgap>[125X [27Xjson2 := ExportAsQGraphString( mor1 );;[127X[104X
    [4X[25Xgap>[125X [27Xmor2 := ImportFromQGraphString( ZX, json2 );;[127X[104X
    [4X[25Xgap>[125X [27Xjson3 := ExportAsQGraphString( mor2 );;[127X[104X
    [4X[25Xgap>[125X [27Xmor3 := ImportFromQGraphString( ZX, json3 );;[127X[104X
    [4X[25Xgap>[125X [27XIsEqualForMorphisms( mor2, mor3 ) and json2 = json3;[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
